{"version":3,"sources":["../../../src/functions/my_bank_api/auth_workflow.ts"],"sourcesContent":["/**\r\n * This module should export a function which returns authorisation headers to be set in API calls \r\n * Here is a commented sample axios call to the third party API for retrieving auth tokens\r\n */\r\n\r\n// import { PlainObject, logger } from '@godspeedsystems/core';\r\n\r\n// const axios = require('axios');\r\n// const client = axios.create({\r\n//   headers: {\r\n//     'Content-Type': 'application/json',\r\n//   }\r\n// });\r\n\r\n// module.exports = async function (dsConfig:PlainObject) {\r\n//   try {\r\n//     const res = await client({\r\n//       method: 'post',\r\n//       url: `${dsConfig.base_url}/anything`,\r\n//       data: dsConfig.data,\r\n//       timeout: 5000\r\n//     });\r\n//     const headers = {\r\n//       'X-AUTH-TOKEN': res.data.data.token,\r\n//     };\r\n\r\n//     logger.info(\r\n//       'Auth token successfully refreshed and following headers set: %o',\r\n//       Object.keys(headers),\r\n//     );\r\n//     return headers;\r\n//   } catch (error) {\r\n//     logger.fatal('Error in refreshing token %o', error);\r\n//     process.exit(1);\r\n//   }\r\n// };\r\nmodule.exports = function (dsConfig: any, ctx: any) {\r\n    // Note: dsCOnfig is type PlainObject and ctx is type GSContext\r\n    // When creating proper function you will import them from @godspeedsystems/core\r\n    // Check the commented code above\r\n    return {\r\n        'X-AUTH-TOKEN': 'response_from_auth_endpoint',\r\n        'X-AUTH-KEY': 'response_from_auth_endpoint'\r\n    }\r\n}"],"names":["module","exports","dsConfig","ctx"],"mappings":"AAAA;;;CAGC,GAED,+DAA+D;AAE/D,kCAAkC;AAClC,gCAAgC;AAChC,eAAe;AACf,0CAA0C;AAC1C,MAAM;AACN,MAAM;AAEN,2DAA2D;AAC3D,UAAU;AACV,iCAAiC;AACjC,wBAAwB;AACxB,8CAA8C;AAC9C,6BAA6B;AAC7B,sBAAsB;AACtB,UAAU;AACV,wBAAwB;AACxB,6CAA6C;AAC7C,SAAS;AAET,mBAAmB;AACnB,2EAA2E;AAC3E,8BAA8B;AAC9B,SAAS;AACT,sBAAsB;AACtB,sBAAsB;AACtB,2DAA2D;AAC3D,uBAAuB;AACvB,MAAM;AACN,KAAK;;AACLA,OAAOC,OAAO,GAAG,SAAUC,QAAa,EAAEC,GAAQ;IAC9C,+DAA+D;IAC/D,gFAAgF;IAChF,iCAAiC;IACjC,OAAO;QACH,gBAAgB;QAChB,cAAc;IAClB;AACJ"}